name: Build and tests eshop

on:
  workflow_dispatch:
  push:

jobs:
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install packages with npm
        run: |
          npm ci

  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors

      - name: Cache node modules and build folder
        if: ${{ github.ref ==  'refs/heads/main' }}
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-build-${{ github.run_id }}

  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1

        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run tests
        run: |
          npm run test -- --colors

  Deploy:
    needs: [Build, Test]
    runs-on: ubuntu-latest
    if: ${{ github.ref ==  'refs/heads/main' }}

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: |
          source /opt/pipx/venvs/ansible-core/bin/activate
          python -m pip install boto3 botocore        
      - name: Run Ansible playbook    
        uses: dawidd6/action-ansible-playbook@v2.8.0
        with:
          playbook: ec2_deploy.yml
          directory: ./ansible
          key: ${{ secrets.SECRET_SSH_KEY }}
          options: |
            --extra-vars "access_key=${{ secrets.AWS_ACCESS_KEY }} secret_key=${{ secrets.AWS_SECRET_KEY }} session_token=${{ secrets.AWS_SESSION_TOKEN }} user=ec2-user"
            --user ec2-user